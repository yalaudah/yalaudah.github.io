module.exports = function(grunt) {

  grunt.loadNpmTasks('grunt-contrib-clean');
  grunt.loadNpmTasks('grunt-contrib-jshint');
  grunt.loadNpmTasks('grunt-contrib-nodeunit');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks("grunt-modernizr");

  
  // Project configuration.
  grunt.initConfig({
    clean: ["build"],
    nodeunit: {
      files: ['test/**/*.js']
    },
    watch: {
      files: '<%= jshint.files %>',
      tasks: 'default'
    },
    jshint: {
      options: {
        curly: true,
        eqeqeq: true,
        immed: true,
        latedef: true,
        newcap: true,
        noarg: true,
        sub: true,
        undef: true,
        boss: true,
        eqnull: true,
        node: true,
        globals: {}
      },
      files: [
        'Gruntfile.js',
        'tasks/**/*.js',
        'test/**/*.js'
      ]
    },
    modernizr: {
      dist: {
        "dest" : "build/modernizr-custom.js",
        "parseFiles": true,
        "customTests": [],
        "devFile": "/PATH/TO/modernizr-dev.js",
        "outputFile": "/PATH/TO/modernizr-output.js",
        "tests": [
"applicationcache",
    "audio",
    "canvas",
    "canvastext",
    "geolocation",
    "hashchange",
    "history",
    "indexeddb",
    "input",
    "inputtypes",
    "postmessage",
    "svg",
    "video",
    "webgl",
    "websockets",
    "cssanimations",
    "backgroundsize",
    "borderimage",
    "borderradius",
    "boxshadow",
    "csscolumns",
    "flexbox",
    "fontface",
    "generatedcontent",
    "cssgradients",
    "hsla",
    "multiplebgs",
    "opacity",
    "cssreflections",
    "rgba",
    "textshadow",
    "csstransforms",
    "csstransforms3d",
    "csstransitions",
    "localstorage",
    "sessionstorage",
    "websqldatabase",
    "svgclippaths",
    "inlinesvg",
    "smil",
    "webworkers"        ],
        "options": [
         "setClasses"
         "domPrefixes",
    "prefixes",
    "addTest",
    "hasEvent",
    "prefixed",
    "testAllProps",
    "testProp",
    "testStyles",
    "html5shiv",
    "setClasses"
        ],
        "uglify": true
        }
    }
  });

  // Load local tasks.
  grunt.loadTasks('tasks');

  // Default task.
  grunt.registerTask('default', [
    'jshint'//,
    //'nodeunit' // there is no test for now, nodeunit task break if there isn't
  ]);

modernizr: {
  dist: {
    
  }
}


};
